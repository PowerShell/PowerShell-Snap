
parameters:
- name: release
  type: string
  displayName: |
    Use `stable` to release by default.

    Use `private` if you want to create a branch on the store to test the package.
    This will create a branch under the edge branch automatically that are difficult, but not impossible to find.

    `candidate`, `beta`, and `edge` are public but we don't have any existing meaning for these channels.
  values:
      - private
      - stable
      - candidate
      - beta
      - edge
  default: stable

trigger: none

variables:
  - name: CDP_DEFINITION_BUILD_COUNT
    value: $[counter('', 0)] # needed for onebranch.pipeline.version task 
  - name: LinuxContainerImage
    value: mcr.microsoft.com/onebranch/cbl-mariner/build:2.0 # Docker image which is used to build the project 
  - name: DEBIAN_FRONTEND
    value: noninteractive
  - group: poolNames

resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates
  parameters:
    git:
      fetchDepth: 1
      # windows only feature
      #longpaths: true
      retryCount: 3
      # we don't use this and some of our agents doesn't have the feature installed
      lfs: false
    cloudvault: 
      enabled: false # set to true to enable cloudvault
      runmode: stage # linux can run CloudVault upload as a separate stage
      dependsOn: linux_build
      artifacts:
        - drop_linux_stage_linux_job
    customTags: 'ES365AIMigrationTooling'
    globalSdl:
      disableLegacyManifest: true
      # disabled Armorty as we dont have any ARM templates to scan. It fails on some sample ARM templates.
      armory:
        enabled: false
      sbom:
        enabled: true
      compiled:
          enabled: false
      credscan:
        enabled: true
        scanFolder:  $(Build.SourcesDirectory)
      cg:
        enabled: true
      asyncSdl: # https://aka.ms/obpipelines/asyncsdl
        enabled: true
        forStages: [scan_lts, scan_stable, scan_preview]
        credscan:
          enabled: true
          scanFolder:  $(Build.SourcesDirectory)
          #suppressionsFile: $(Build.SourcesDirectory)\PowerShell\.config\suppress.json
        binskim:
          enabled: false
        # APIScan requires a non-Ready-To-Run build
        apiscan:
          enabled: false
        tsaOptionsFile: .config\tsaoptions.json

    stages:
    - template: /.pipelines/templates/releaseBuildAndPushStage.yml@self
      parameters:
        channel: stable
        release: ${{ parameters.release }}

    - template: /.pipelines/templates/releaseBuildAndPushStage.yml@self
      parameters:
        channel: preview
        release: ${{ parameters.release }}

    - template: /.pipelines/templates/releaseBuildAndPushStage.yml@self
      parameters:
        channel: lts
        release: ${{ parameters.release }}
