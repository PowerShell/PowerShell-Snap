#################################################################################
#                               OneBranch Pipelines                             #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

parameters:
- name: release
  type: string
  displayName: |
    Use `stable` to release by default.

    Use `private` if you want to create a branch on the store to test the package.
    This will create a branch under the edge branch automatically that are difficult, but not impossible to find.

    `candidate`, `beta`, and `edge` are public but we don't have any existing meaning for these channels.
  values:
      - private
      - stable
      - candidate
      - beta
      - edge
  default: stable

trigger: none

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  LinuxContainerImage: 'onebranch.azurecr.io/linux/ubuntu-2004:latest' # Docker image which is used to build the project https://aka.ms/obpipelines/containers
  DEBIAN_FRONTEND: noninteractive

resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    cloudvault: # https://aka.ms/obpipelines/cloudvault
      enabled: false # set to true to enable cloudvault
      runmode: stage # linux can run CloudVault upload as a separate stage
      dependsOn: linux_build
      artifacts:
        - drop_linux_stage_linux_job

    globalSdl: # https://aka.ms/obpipelines/sdl
      # tsa:
      #  enabled: true # SDL results of non-official builds aren't uploaded to TSA by default.
      # credscan:
      #   suppressionsFile: $(Build.SourcesDirectory)\.config\CredScanSuppressions.json
      policheck:
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'
      # suppression:
      #   suppressionFile: $(Build.SourcesDirectory)\.gdn\global.gdnsuppress

    stages:
    - template: /.pipelines/templates/releaseBuildAndPushStage.yml@self
      parameters:
        channel: stable
        release: ${{ parameters.release }}

    - template: /.pipelines/templates/releaseBuildAndPushStage.yml@self
      parameters:
        channel: preview
        release: ${{ parameters.release }}

    - template: /.pipelines/templates/releaseBuildAndPushStage.yml@self
      parameters:
        channel: lts
        release: ${{ parameters.release }}