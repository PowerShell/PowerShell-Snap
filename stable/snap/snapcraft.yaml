name: powershell

icon: assets/icon.png

# the version number is not used, but required
version: 6.0.1
#base: core
version-script: |
  file="./version.txt"
  if [ -f "$file" ]
  then
    cat $file
  else
    version=$(curl -s 'https://raw.githubusercontent.com/PowerShell/PowerShell/master/tools/metadata.json' | jq .StableReleaseTag | sed 's/"//g' | sed 's/v//')
    echo $version
  fi
summary: PowerShell for every system!
description: |
  PowerShell is an automation and configuration management platform.
  It consists of a cross-platform (Windows, Linux, and macOS)
  command-line shell and associated scripting language.

  See https://docs.microsoft.com/en-us/powershell/scripting/powershell-core-support for support details.

confinement: classic

apps:
  powershell:
    command: bin/powershell-wrapper

parts:
    # A wrapper script
  launchers:
      plugin: dump
      source: .
      organize:
          launcher/powershell-wrapper: bin/powershell-wrapper
      filesets:
          wrapper: [bin/powershell-wrapper]
      stage: [$wrapper]
      prime: [$wrapper]
  powershell:
    after: [launchers]
    plugin: nil
    override-build: |
      file="./version.txt"
      if [ -f "$file" ]
      then
        echo "using version file"
        version=$(cat $file)
      else
        echo "getting latest version from GitHub"
        version=$(curl -s 'https://raw.githubusercontent.com/PowerShell/PowerShell/master/tools/metadata.json' | jq .StableReleaseTag | sed 's/"//g' | sed 's/v//')
        echo "Writing version to file"
        echo $version > $file
      fi
      echo "getting powershell $version"
      curl -L -o powershell.tar.gz https://github.com/PowerShell/PowerShell/releases/download/v$version/powershell-$version-linux-x64.tar.gz
      echo "getting Third Party Notice Header"
      curl -L -o thirdPartyNoticeHeader.txt https://raw.githubusercontent.com/PowerShell/PowerShell-Snap/master/assets/thirdPartyNoticeHeader.txt
      mkdir -p $SNAPCRAFT_PART_INSTALL/opt/powershell
      tar zxf powershell.tar.gz -C $SNAPCRAFT_PART_INSTALL/opt/powershell
      echo 'updating rpath...'
      patchelf --force-rpath --set-rpath '$ORIGIN/netcoredeps:$ORIGIN/../../usr/lib/x86_64-linux-gnu' $SNAPCRAFT_PART_INSTALL/opt/powershell/pwsh
      echo 'new rpath'
      patchelf --print-rpath $SNAPCRAFT_PART_INSTALL/opt/powershell/pwsh
      echo 'fixed rpath'
      chmod +x $SNAPCRAFT_PART_INSTALL/opt/powershell/pwsh
      thirdPartyNoticeFile="$SNAPCRAFT_PART_INSTALL/thirdPartyNotices.txt"
      echo "building third party notices file - $thirdPartyNoticeFile"
      cat thirdPartyNoticeHeader.txt > $thirdPartyNoticeFile
      find $SNAPCRAFT_PART_INSTALL -type f -name 'copyright' -print | while read filename; do
        libname=$(dirname $filename | sed 's,^\(.*/\)\?\([^/]*\),\2,')
        echo ''
        echo '---------------------------------------------'
        echo "Package - $libname"
        echo '---------------------------------------------'
        cat "$filename"
      done >> $thirdPartyNoticeFile
      echo "Done building third party notices file - $thirdPartyNoticeFile"
    stage-packages:
      - libicu55
      - liblttng-ust0
      - libssl1.0.0
      - zlib1g
    build-packages:
      - curl
      - jq
      - patchelf
