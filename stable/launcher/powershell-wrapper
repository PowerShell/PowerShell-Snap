#!/bin/sh
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

lowercase(){
    echo "$1" | sed "y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/"
}

TestDistro(){
    local KERNEL=`uname -r`
    local MACH=`uname -m`
    local DIST
    local DistroBasedOn
    local REV="-"

    if [ -f /etc/redhat-release ] ; then
        DistroBasedOn='redhat'
        DIST=`cat /etc/redhat-release |sed s/\ release.*//`
        REV=`cat /etc/redhat-release | sed s/.*release\ // | sed s/\ .*//`
    elif [ -f /etc/system-release ] ; then
        DIST=`cat /etc/system-release |sed s/\ release.*//`
        REV=`cat /etc/system-release | sed s/.*release\ // | sed s/\ .*//`
        if [[ $DIST == *"Amazon Linux"* ]] ; then
            DistroBasedOn='amazonlinux'
        else
            DistroBasedOn='redhat'
        fi
    elif [ -f /etc/SuSE-release ] ; then
        DistroBasedOn='suse'
        REV=`cat /etc/SuSE-release | grep 'VERSION' | sed s/.*=\ //`
    elif [ -f /etc/mandrake-release ] ; then
        DistroBasedOn='mandrake'
        REV=`cat /etc/mandrake-release | sed s/.*release\ // | sed s/\ .*//`
    elif [ -f /etc/debian_version ] ; then
        DistroBasedOn='debian'
        DIST=`cat /etc/lsb-release | grep '^DISTRIB_ID' | awk -F=  '{ print $2 }'`
        REV=`cat /etc/lsb-release | grep '^DISTRIB_RELEASE' | awk -F=  '{ print $2 }'`
    elif [ -f /etc/arch-release ] ; then
        DIST=`cat /etc/os-release | grep '^ID' | awk -F=  '{ print $2 }'`
        if [ -f /etc/manjaro-release ] ; then
            DistroBasedOn='manjaro'
        else
            DistroBasedOn='arch'
        fi
    fi
    if [ -f /etc/UnitedLinux-release ] ; then
        DIST="${DIST}[`cat /etc/UnitedLinux-release | tr "\n" ' ' | sed s/VERSION.*//`]"
    fi
    DistroBasedOn=`lowercase $DistroBasedOn`
    DIST=`lowercase $DIST`

    # Tests for unsupported distributions go here
    if [ "${DIST}" = "fedora" -a "${REV}" = "28" ] ; then
        #Fedora 28 is unsupported and needs a workaround to function
        ReportUnsupported -D $DIST -R $REV
        echoerr "Use 'powershell-preview' package for support."
        WorkaroundTerminalIssue
    elif [ "${DIST}" = "manjaro" ] ; then
        # The Manjaro distribution is supported and needs a workaround
        ReportUnsupported -D $DIST -R $REV
        WorkaroundTerminalIssue
    elif [ "${DistroBasedOn}" = "arch" ] ; then
        # All distributions based on arch all unsupported
        ReportUnsupported -D $DIST -R $REV
    fi
}

WorkaroundTerminalIssue(){
    # Workaround for https://github.com/powershell/powershell/issues/6132
    export TERM=xterm
}

echoerr() { printf "\033[0;31m%s\n\033[0m" "$*" >&2; }

ReportUnsupported(){
    local arg Dist Rev
    while getopts 'D:R:' arg
    do
        case ${arg} in
            D) Dist=${OPTARG};;
            R) Rev=${OPTARG};;
            *) return 1 # illegal option
        esac
    done

    echoerr "Warning: PowerShell 6.0 does not support $Dist $Rev and only community support is available!"
}

# Test if the Distrobution is supported
TestDistro

exec "$SNAP/opt/powershell/pwsh" "$@"
